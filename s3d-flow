#!/bin/bash
set -e

if [ -n "$2" ]; then
  echo "FLOW: in '$(pwd)' changing to '$2'"
  cd "../$2"
fi

# determine the module
module=$(git remote get-url ssh | sed 's/.*\///' | sed 's/\.git//')
export S3D_MODULE=$module

echo -e $'\n'
echo -e "************************************************************"
echo -e "* FLOW: $(pwd)"
echo -e "* $module"
echo -e "************************************************************"
echo -e $'\n'

# If we are not in S3D_FLOW_FINISHING error when we don't have a pre-release
if [ -z "$S3D_FLOW_FINISHING" ]; then
  flow_status="$(s3d-flow-json | jq -r .is_final)"
  echo "FLOW: preparing '$flow_status' flow"
  if [[ true == "$flow_status" ]]; then
    echo 'ERROR: flow not started' 2>&1; exit 1
  fi
fi

# Create the flow message
export S3D_FLOW_MSG="${1^}"
echo "S3D_FLOW_MSG='$S3D_FLOW_MSG'"

# Execute a local flow if one exists
if [[ scripts != ${PWD##*/} ]]; then
  echo 'FLOW: local flow'
  [ ! -f ./s3d-flow ] || ./s3d-flow
fi

# We need to test first
s3d-test
echo 'FLOW: test - complete'

# If the status is clean we are done
if [[ 0 = $(git status --porcelain  | wc -l) ]]; then
  echo -e "FLOW: Clean ${module}=$(git describe)" >&2
else
  v=$(s3d-flow-json | jq -r .latest)
  v2=$(s3d-flow-json | jq -r .release)

  # Commit, tag and push
  s3d-flow-commit
  s3d-flow-tag

  # Checkout a "Detatched" head
  git checkout -q HEAD~0
fi

# Push the flow to update "ref=" in other modules
s3d-flow-push

# Execute a module post flow if one exists
if [ -f "../scripts/post-flow/$module" ]; then
  echo "FLOW: starting postflow '$module'" 
  "../scripts/post-flow/$module" "$1"
else
  echo "FLOW: no postflow for '$module'" 
fi
