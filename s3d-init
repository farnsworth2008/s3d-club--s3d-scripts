#!/bin/bash
set -e

# Exit if this is the scripts dir
[[ scripts != ${PWD##*/} ]] || exit 0

echo 'FLOW: format'
s3d-format

# If a local init script exists we run it
if [ -f ./s3d-init ]; then
  has_local_init=true
  echo 'FLOW: local init'
  ./s3d-init
fi

# If main.tf exits, we also init by running terrafom validate
if [ -f main.tf ]; then
  echo 'FLOW: tf get -update'
  log="$HOME/.s3d/logs/$(uuidgen | cut -c 1-8).log"
  terraform get -update >> $log 2>&1 

  echo 'FLOW: tf init'
  log="$HOME/.s3d/logs/$(uuidgen | cut -c 1-8).log"
  if [ s3d-terraform-init ]; then
    echo 'FLOW: tf init - complete'
  else
    try_delay=10
    echo "FLOW: WARN tf init failed, will try again in $try_delay seconds"
    sleep $try_delay
    log="$HOME/.s3d/logs/$(uuidgen | cut -c 1-8).log"
    s3d-terraform-init
    echo 'FLOW: tf init - 2nd try complete'
  fi

  if [ -n "$S3D_TF_LOCK" ]; then
    echo 'FLOW: tf lock update'
    log="$HOME/.s3d/logs/$(uuidgen | cut -c 1-8).log"
    s3d-tf-lock >> $log 2>&1
  fi
fi

# If main.go, we run go tidy
if [ -f main.go ]; then
  echo 'FLOW: go mod tidy'
  go mod tidy
fi

# If a package.json exists, we run npm **UNLESS** a local `s3d-init` script
# exists.
if [ -z $has_local_init ]; then
  if [ -f package.json ]; then
    echo 'FLOW: npm install'
    npm install
  fi
fi
